{"version":3,"sources":["App.js","index.js","src/star.png","src/star-outline.png"],"names":["library","data","localStorage","getItem","JSON","parse","init","HomeScreen","View","style","styles","container","EditBook","index","useState","rating","defaultRating","setDefaultRating","maxRating","Text","hide","type","id","defaultValue","title","author","genre","ratings","map","item","TouchableOpacity","onPress","Image","stars","source","star","staroutline","text","value","length","Button","updateBook","document","getElementById","setItem","stringify","ReactDOM","createRoot","render","App","BookList","ScrollView","book","authors","undefined","join","src","Array","apply","i","buttons","showEdit","Ionicons","button","name","size","color","splice","deleteBook","AddScreen","search","setSearch","books","setBooks","searchbar","input","onChange","e","target","console","log","fetch","then","response","json","items","catch","error","volumeInfo","newBook","push","addBook","categories","pageCount","getTopAuthor","topAuthor","topAuthorCount","j","getTopGenre","genres","topGenre","topGenreCount","getLongest","longest","getTotalPages","total","StatsScreen","stats","lastUsedScreen","Tab","createBottomTabNavigator","main","NavigationContainer","Navigator","initialRouteName","screenListeners","route","focus","screenOptions","tabBarIcon","focused","tabBarInactiveTintColor","tabBarActiveTintColor","Screen","component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexWrap","width","fontSize","display","flexDirection","fontWeight","height","resizeMode","filter","gridTemplateColumns","margin","border","borderRadius","marginTop","marginBottom","padding","JustifyContent","textAlign","registerRootComponent","module","exports"],"mappings":"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","file":"static/js/app.ea96315d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, ScrollView, Button} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport ReactDOM from 'react-dom';\r\nimport star from './src/star.png';\r\nimport staroutline from './src/star-outline.png';\r\n\r\n//Initialise library from local storage if it exists or create a new one\r\nlet library = []\r\nconst init = () => {\r\n  let data = localStorage.getItem('library');\r\n  if (data) {\r\n    library = JSON.parse(data);\r\n  }\r\n}\r\ninit();\r\n\r\n//Home Screen screen that displays the library\r\nconst HomeScreen = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <BookList/>\r\n    </View>\r\n  );\r\n}\r\n\r\n//Delete book from library and update local storage\r\nconst deleteBook = (index) => {\r\n  library.splice(index, 1);\r\n  localStorage.setItem(\"library\", JSON.stringify(library));\r\n  \r\n  const root = ReactDOM.createRoot(document.getElementById('root'));\r\n  root.render(<App/>);\r\n}\r\n\r\n//display the edit book screen\r\nconst showEdit = (index) => {\r\n  const root = ReactDOM.createRoot(document.getElementById('root'));\r\n  root.render(<EditBook index={index}/>);\r\n}\r\n\r\n//Edit Book Screen that displays the book and allows the user to edit the rating\r\nconst EditBook = ({index}) => {\r\n  //Ratings bar\r\n  const [defaultRating, setDefaultRating] = useState(library[index].rating);\r\n  const [maxRating] = useState([1, 2, 3, 4, 5]);\r\n  const RatingsBar = () => {\r\n    return (\r\n      <View style={styles.ratings}>\r\n        {maxRating.map((item) => {\r\n          return (\r\n            <TouchableOpacity onPress={() => setDefaultRating(item)}>\r\n              <Image\r\n                style={styles.stars}\r\n                source={item <= defaultRating ? star : staroutline}\r\n              />\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Edit Book</Text>\r\n      <View>\r\n        <input style={styles.hide} type={\"text\"} id={\"idInput\"} defaultValue={library[index].id}></input>\r\n        <Text>Title</Text>\r\n        <input type=\"text\" id=\"titleInput\" defaultValue={library[index].title}></input>\r\n        <br></br>\r\n        <Text style={styles.hide}>Author</Text>\r\n        <input style={styles.hide} type=\"text\" id=\"authorInput\" defaultValue={library[index].author}></input>\r\n        <br></br>\r\n        <Text style={styles.hide}>Genre</Text>\r\n        <input style={styles.hide} type=\"text\" id=\"genreInput\" defaultValue={library[index].genre}></input>\r\n        <br></br>\r\n        <Text>Rating</Text>\r\n        <RatingsBar/>\r\n        <Text style={styles.text}>\r\n          {defaultRating} / 5\r\n        </Text>\r\n        <View style={styles.hide}><input type=\"text\" id=\"ratingInput\" value={defaultRating}></input></View>\r\n        <View style={styles.hide}><input type=\"text\" id=\"lengthInput\" value={library[index].length}></input></View>\r\n        <br></br>\r\n        <Button title=\"Update\" onPress={() => updateBook(index)}></Button>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n//update the book in library and update local storage\r\nconst updateBook = (index) => {\r\n  const id = library[index].id;\r\n  const title = document.getElementById(\"titleInput\").value\r\n  const author = library[index].author;\r\n  const genre = library[index].genre;\r\n  const rating = document.getElementById(\"ratingInput\").value\r\n  const length = library[index].length;\r\n  \r\n  library[index] = {id, title, author, genre, rating, length}\r\n  localStorage.setItem(\"library\", JSON.stringify(library));\r\n  const root = ReactDOM.createRoot(document.getElementById('root'));\r\n  root.render(<App/>);\r\n}\r\n\r\n//BookList component that displays the library\r\nconst BookList = () => {\r\n  //Seperate the authors and show if there is an undefined author\r\n  const Authors = (authors) => {\r\n    if (authors == undefined)\r\n      authors = \"Unknown\";\r\n    else if (authors.length >= 2)\r\n      authors = authors.join(\" and \");\r\n    return authors;\r\n  };\r\n    \r\n  return(\r\n    <ScrollView>\r\n      <View style={styles.library}>\r\n        {library.map((book, index) => {\r\n          return(\r\n            <View style={styles.book} key={index}>\r\n              <Text style={styles.title}>\r\n                {book.title}\r\n              </Text>\r\n              <Text style={styles.text}>\r\n                by {Authors(book.author)}\r\n              </Text>\r\n              <Text style={styles.text}>\r\n                Genre: {book.genre}\r\n              </Text>\r\n              <br></br>\r\n              <img src={'http://books.google.com/books/content?id=' + book.id + '&printsec=frontcover&img=1&zoom=1&source=gbs_api'}/>\r\n              <br></br>\r\n              {book.rating == 0 && <Text style={styles.text}>Click the edit button to add your rating!</Text>}\r\n              {book.rating != 0 &&\r\n                <View>\r\n                  <View style={styles.ratings}>\r\n                    {Array.apply(null, {length: book.rating}).map((i) => {\r\n                      return <Image key={i} style={styles.stars} source={star}/>\r\n                    })}\r\n                    {Array.apply(null, {length: 5 - book.rating}).map((i) => {\r\n                      return <Image key={i} style={styles.stars} source={staroutline}/>\r\n                    })}\r\n                  </View>\r\n                  <Text style={styles.text}>{book.rating} / 5</Text>\r\n                </View>\r\n              }\r\n              <View style={styles.buttons}>\r\n                <TouchableOpacity onPress={() => showEdit(index)}>\r\n                  <Ionicons style={styles.button} name=\"pencil-sharp\" size=\"30px\" color={\"white\"}/>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => deleteBook(index)}>\r\n                  <Ionicons style={styles.button} name=\"trash-sharp\" size=\"30px\" color={\"white\"}/>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View> \r\n            \r\n          ) \r\n        })}\r\n      </View>\r\n    </ScrollView> \r\n  )\r\n}\r\n\r\n//Add Book from search\r\nconst addBook = (id, title, author, genre, rating, length) => {\r\n  const newBook = {id, title, author, genre, rating, length};\r\n  library.push(newBook)\r\n  localStorage.setItem(\"library\", JSON.stringify(library));\r\n  const root = ReactDOM.createRoot(document.getElementById('root'));\r\n  root.render(<App/>);\r\n}\r\n\r\n//Add Screen that displays the search results and allows the user to add a book to the library from the search results\r\nconst AddScreen = () => {\r\n  //Star Ratings\r\n  const [defaultRating, setDefaultRating] = useState(1);\r\n  const [maxRating] = useState([1, 2, 3, 4, 5]);\r\n  const RatingsBar = () => {\r\n    return (\r\n      <View style={styles.ratings}>\r\n        {maxRating.map((item) => {\r\n          return (\r\n            <TouchableOpacity onPress={() => setDefaultRating(item)}>\r\n              <Image\r\n                style={styles.stars}\r\n                source={item <= defaultRating ? star : staroutline}\r\n              />\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  const Authors = (authors) => {\r\n    if (authors == undefined)\r\n      authors = \"Unknown\";\r\n    else if (authors.length >= 2)\r\n      authors = authors.join(\" and \");\r\n    return authors;\r\n  };\r\n  \r\n  const [search, setSearch] = useState(\"\");\r\n  const [books, setBooks] = useState([]);\r\n  \r\n  const searchBooks = () => {\r\n    console.log(search);\r\n    fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + search)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setBooks(json.items);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  return(\r\n    <View style={styles.search}>\r\n      <Text>Search for your book:</Text>\r\n      <View style={styles.searchbar}>\r\n        <input style={styles.input} type=\"text\" id=\"searchInput\" value={search} onChange={(e) => setSearch(e.target.value)}></input>\r\n        <TouchableOpacity onPress={() => searchBooks()} >\r\n          <Ionicons style={styles.button} name=\"search-sharp\" size=\"30px\" color={\"white\"}/>\r\n        </TouchableOpacity>\r\n      </View>\r\n        <ScrollView>\r\n          <View style={styles.library}>\r\n            {books.map((book, index) => {\r\n              return(\r\n                <View style={styles.book} key={index}>\r\n                  <Text style={styles.title}>\r\n                    {book.volumeInfo.title}\r\n                  </Text>\r\n                  <Text style={styles.text}>\r\n                    by {Authors(book.volumeInfo.authors)}\r\n                  </Text>\r\n                  <br></br>\r\n                  <img src={'http://books.google.com/books/content?id=' + book.id + '&printsec=frontcover&img=1&zoom=1&source=gbs_api'}/>\r\n                  <br></br>\r\n                  {/*<RatingsBar/>\r\n                    <Text>\r\n                      {defaultRating} / 5\r\n                    </Text>\r\n                  <br></br>*/}\r\n                  <TouchableOpacity onPress={() => addBook(book.id, book.volumeInfo.title, book.volumeInfo.authors, book.volumeInfo.categories, 0, book.volumeInfo.pageCount)}>\r\n                    <Ionicons style={styles.button} name=\"add\" size=\"30px\" color={\"white\"}/>\r\n                  </TouchableOpacity>\r\n\r\n                </View> \r\n              ) \r\n            }\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n//gets the top authors from the library and displays them\r\nconst getTopAuthor = () => {\r\n  let authors = [];\r\n  let topAuthor = [];\r\n  let topAuthorCount = 0;\r\n  for (let i = 0; i < library.length; i++) {\r\n    if (library[i].author == undefined)\r\n      continue;\r\n    for (let j = 0; j < library[i].author.length; j++) {\r\n      if (authors[library[i].author[j]] == undefined)\r\n        authors[library[i].author[j]] = 1;\r\n      else\r\n        authors[library[i].author[j]]++;\r\n    }\r\n  }\r\n  for (let author in authors) {\r\n    if (authors[author] > topAuthorCount) {\r\n      topAuthor = [author];\r\n      topAuthorCount = authors[author];\r\n    }\r\n    else if (authors[author] == topAuthorCount)\r\n      topAuthor.push(author);\r\n  }\r\n  if (topAuthor.length > 1) {\r\n    topAuthor[topAuthor.length - 1] = \"and \" + topAuthor[topAuthor.length - 1];\r\n  }\r\n  return topAuthor.join(\", \");\r\n\r\n}\r\n\r\n//gets the top genres from the library and displays them\r\nconst getTopGenre = () => {\r\n  let genres = [];\r\n  let topGenre = [];\r\n  let topGenreCount = 0;\r\n  for (let i = 0; i < library.length; i++) {\r\n    if (library[i].genre == undefined)\r\n      continue;\r\n    for (let j = 0; j < library[i].genre.length; j++) {\r\n      if (genres[library[i].genre[j]] == undefined)\r\n        genres[library[i].genre[j]] = 1;\r\n      else\r\n        genres[library[i].genre[j]]++;\r\n    }\r\n  }\r\n  for (let genre in genres) {\r\n    if (genres[genre] > topGenreCount) {\r\n      topGenre = [genre];\r\n      topGenreCount = genres[genre];\r\n    }\r\n    else if (genres[genre] == topGenreCount)\r\n      topGenre.push(genre);\r\n  }\r\n  if (topGenre.length > 1) {\r\n    topGenre[topGenre.length - 1] = \"and \" + topGenre[topGenre.length - 1];\r\n  }\r\n  return topGenre.join(\", \");\r\n}\r\n\r\n//gets the top length from the library and displays it\r\nconst getLongest = () => {\r\n  let longest = 0;\r\n  let title = \"\";\r\n  for (let i = 0; i < library.length; i++) {\r\n    if (library[i].length > longest) {\r\n      longest = library[i].length;\r\n      title = library[i].title;\r\n    }\r\n  }\r\n  return title + \" (\" + longest + \" pages)\";\r\n}\r\n\r\n//gets the total number of pages in the library and displays it\r\nconst getTotalPages = () => {\r\n  let total = 0;\r\n  for (let i = 0; i < library.length; i++) {\r\n    total += library[i].length;\r\n  }\r\n  return total;\r\n}\r\n\r\n//Stats Screen displays the stats of the library\r\nconst StatsScreen = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.stats}><Ionicons name=\"person\" size=\"20px\"/> Most Read Author</Text>\r\n      <Text style={styles.text}>{getTopAuthor()}</Text>\r\n      <br></br>\r\n      <Text style={styles.stats}><Ionicons name=\"heart\" size=\"20px\"/> Most Read Genre</Text>\r\n      <Text style={styles.text}>{getTopGenre()}</Text>\r\n      <br></br>\r\n      <Text style={styles.stats}><Ionicons name=\"book\" size=\"20px\"/> Longest Book</Text>\r\n      <Text style={styles.text}>{getLongest()}</Text>\r\n      <br></br>\r\n      <Text style={styles.stats}><Ionicons name=\"reader\" size=\"20px\"/> Total Pages Read</Text>\r\n      <Text style={styles.text}>{getTotalPages()}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n//Navigation Screen displays the navigation bar at the bottom of the screen and allows the user to navigate between the different screens of the app\r\nlet lastUsedScreen = \"Library\";\r\nconst Tab = createBottomTabNavigator();\r\nfunction App () {\r\n  return (\r\n    <View style={styles.main}>\r\n      <NavigationContainer >\r\n        <Tab.Navigator initialRouteName={lastUsedScreen} screenListeners = {({ route }) => ({ focus: () => lastUsedScreen = route.name })}\r\n        screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n              if (route.name === 'Library') {\r\n                return (\r\n                  <Ionicons\r\n                    name={focused ? 'library' : 'library-outline'}\r\n                    size={size}\r\n                    color={color}\r\n                  />\r\n                );\r\n              } else if (route.name === 'Add Books') {\r\n                return (\r\n                  <Ionicons\r\n                    name={focused ? 'add-circle' : 'add-circle-outline'}\r\n                    size={size}\r\n                    color={color}\r\n                  />\r\n                );\r\n              } else if (route.name === 'Statistics') {\r\n                return (\r\n                  <Ionicons\r\n                    name={focused ? 'stats-chart' : 'stats-chart-outline'}\r\n                    size={size}\r\n                    color={color}\r\n                  />\r\n                );\r\n              }\r\n            },\r\n            tabBarInactiveTintColor: 'black',\r\n            tabBarActiveTintColor: '#07BEB8',\r\n          })}\r\n        >\r\n          <Tab.Screen name=\"Library\" component={HomeScreen}/>\r\n          <Tab.Screen name=\"Add Books\" component={AddScreen}/>\r\n          <Tab.Screen name=\"Statistics\" component={StatsScreen}/>\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    </View>\r\n  );\r\n}\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    width: '100vw',    \r\n  },\r\n  stats: {\r\n    fontSize: 18,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  ratings: {\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  stars: {\r\n    width: 30,\r\n    height: 30,\r\n    resizeMode: 'cover',\r\n    filter: 'invert(100) sepia(1) saturate(200) hue-rotate(37deg) brightness(500%) contrast(100%)',\r\n  },\r\n  main: {\r\n    height: '99%',\r\n    width: '100vw',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  library: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(2, 1fr)',\r\n    height: '100%',\r\n  },\r\n  book: {\r\n    alignItems: 'center',\r\n    margin: '10px',\r\n    border: '1px solid black',\r\n    borderRadius: '10px',\r\n    justifyContent: 'space-between',\r\n  },\r\n  buttons: {\r\n    flexDirection: 'row',\r\n    marginTop: '5px',\r\n    marginBottom : '5px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#07BEB8',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    margin: '5px',\r\n  },\r\n  search: {\r\n    flex: 1,\r\n    backgroundColor: '#ffffff',\r\n    alignItems: 'center',\r\n    JustifyContent: 'center',\r\n  },\r\n  searchbar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    fontSize: 18,\r\n    margin: '5px',\r\n    borderRadius: '5px',\r\n    width: '60%',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    margin: '5px',\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n    margin: '5px',\r\n    width: '100%',\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },  \r\n});","import { registerRootComponent } from 'expo';\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);","module.exports = __webpack_public_path__ + \"static/media/star.6787e6dd.png\";","module.exports = __webpack_public_path__ + \"static/media/star-outline.15dbcbbe.png\";"],"sourceRoot":""}